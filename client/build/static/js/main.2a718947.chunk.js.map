{"version":3,"sources":["components/posts.js","index.js"],"names":["Posts","cards","messages","map","message","i","className","key","src","user","avatar_url","alt","username","source","url","body","length","App","props","fetchMessages","symbol","a","state","symbols","includes","alert","fetch","method","response","json","new_symbols","concat","new_messages","setState","console","log","searchSymbolRef","React","createRef","placeholder","ref","this","type","onKeyDown","e","keyCode","current","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA4BeA,G,YAxBD,SAAC,GAAgB,IACvBC,EADsB,EAAdC,SACSC,KAAI,SAACC,EAASC,GAC/B,OACA,yBAAKC,UAAU,OAAOC,IAAKF,GACvB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKE,IAAKJ,EAAQK,KAAKC,WAAYC,IAAKP,EAAQK,KAAKG,WACrD,6BACI,0BAAMN,UAAU,YAAYF,EAAQK,KAAKG,UAD7C,IAC8D,0CAAgBR,EAAQS,OAAOC,IAA/B,KAC1D,0BAAMR,UAAU,gBAAgBF,EAAQW,aAQ5D,OACI,6BACKd,EAAMe,OAASf,EAAQ,qDCb9BgB,G,oEACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAcPC,cAfmB,uCAeH,WAAOC,GAAP,qBAAAC,EAAA,0DACZ,EAAKC,MAAMC,QAAQC,SAASJ,GADhB,uBAEdK,MAAM,4BAFQ,mDAOOC,MAAM,gCAAD,OAAiCN,GAAU,CAACO,OAAQ,QAPhE,cAOVC,EAPU,gBAQGA,EAASC,OARZ,OAQVd,EARU,OAUVe,EAAc,EAAKR,MAAMC,QAAQQ,OAAOX,GACxCY,EAAe,EAAKV,MAAMpB,SAAS6B,OAAOhB,EAAKb,UAEnD,EAAK+B,SAAS,CACbV,QAASO,EACT5B,SAAU8B,IAEXE,QAAQC,IAAI,EAAKb,MAAMC,QAAS,EAAKD,MAAMpB,UAjB7B,kDAoBduB,MAAM,EAAD,IApBS,0DAfG,sDAGlB,EAAKW,gBAAkBC,IAAMC,YAE7B,EAAKhB,MAAQ,CACZpB,SAAU,GACVqB,QAAS,IAPQ,E,kGAuCT,IAAD,OACR,OACA,yBAAKjB,UAAU,aACd,yBAAKA,UAAU,oBACd,2BAAOiC,YAAY,eAAejC,UAAU,eAAekC,IAAKC,KAAKL,gBAAiBM,KAAK,OAAOC,UAAW,SAACC,GAAD,OAAuB,KAAdA,EAAEC,QAAiB,EAAK1B,cAAc,EAAKiB,gBAAgBU,QAAQC,OAASb,QAAQC,KAAI,OAE/M,kBAAC,EAAD,CAAOjC,SAAUuC,KAAKnB,MAAMpB,gB,GA9CbmC,IAAMW,YAoDxBC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.2a718947.chunk.js","sourcesContent":["import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport \"../styles/posts.scss\";\r\n\r\nconst Posts = ({messages}) => {\r\n    let cards = messages.map((message, i)=> {\r\n        return (\r\n        <div className=\"card\" key={i}>\r\n            <div className=\"card-body\">\r\n                <div className=\"message\">\r\n                    <img src={message.user.avatar_url} alt={message.user.username} />\r\n                    <div>\r\n                        <span className=\"username\">{message.user.username}</span> <span>(Source: {message.source.url})</span>\r\n                        <span className=\"message-body\">{message.body}</span>\r\n                        {/* {(message.entities.chart) ? <img src={message.entities.chart.thumb} /> : null } */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            {cards.length ? cards : <div>No Messages Found</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './styles/main.scss';\n\nimport Posts from './components/posts';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.searchSymbolRef = React.createRef();\n\n\t\tthis.state = {\n\t\t\tmessages: [],\n\t\t\tsymbols: []\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.fetchMessages('OIL');\n\t}\n\n\tfetchMessages = async (symbol) => {\n\t\tif(this.state.symbols.includes(symbol)) {\n\t\t\talert('Symbol already searched!')\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlet response = await fetch(`http://localhost:8080/tweets/${symbol}`, {method: 'GET'});\n\t\t\tlet body = await response.json();\n\t\t\t\n\t\t\tlet new_symbols = this.state.symbols.concat(symbol);\n\t\t\tlet new_messages = this.state.messages.concat(body.messages);\n\n\t\t\tthis.setState({\n\t\t\t\tsymbols: new_symbols,\n\t\t\t\tmessages: new_messages\n\t\t\t});\n\t\t\tconsole.log(this.state.symbols, this.state.messages);\n\t\t}\n\t\tcatch(err) {\n\t\t\talert(err);\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn(\n\t\t<div className=\"container\">\n\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t<input placeholder=\"Stock Symbol\" className=\"form-control\" ref={this.searchSymbolRef} type='text' onKeyDown={(e) => ( e.keyCode === 13 ? this.fetchMessages(this.searchSymbolRef.current.value) : console.log(false)) }/>\n\t\t\t</div>\n\t\t\t<Posts messages={this.state.messages} />\n\t\t</div>\n\t\t)\n\t}\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>, \n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}